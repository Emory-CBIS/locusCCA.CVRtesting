% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locus_CCA.R
\name{Locus_CCA}
\alias{Locus_CCA}
\title{Locus Canonical Correlation Analysis (locus_CCA)}
\usage{
Locus_CCA(
  X,
  Y,
  node,
  m,
  lambda,
  gamma = 2.1,
  penalt = "L1",
  proportion = 0.9,
  silent = FALSE,
  tol = 0.001
)
}
\arguments{
\item{X}{A matrix of predictor variables (n x p).}

\item{Y}{A matrix of response variables (n x m).}

\item{node}{An integer indicating the node size.}

\item{m}{An integer specifying the number of canonical components.}

\item{lambda}{A numeric value regulating the penalty term applied to canonical weights on brain connectivity.}

\item{gamma}{A numeric value (default = 2.1) used in SCAD penalty. Must be > 2.}

\item{penalt}{A string specifying the penalty type. Options:
- "Hardthreshold": Applies hard thresholding.
- "SCAD": Uses SCAD regularization.
- "L1": Applies L1 regularization.
- Other: No penalty.}

\item{proportion}{A numeric value (default = 0.9) indicating the threshold proportion for the connectivity traits, determining the ranks of our low rank structure.}

\item{silent}{Logical. If TRUE, suppresses output messages (default = FALSE).}

\item{tol}{A numeric tolerance level for convergence (default = 1e-3).}
}
\value{
A list containing:
\item{U}{Canonical variable matrix for `X` (p x m).}
\item{V}{Canonical variable matrix for `Y` (q x m).}
\item{CC}{Canonical correlations between the each corresponding projection, m by m matrices.}
\item{R}{Vector of selected rank for each canonical component.}
}
\description{
This function performs locus_CCA with sparse regularization.
}
